From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Windmill1055 <13755781055@163.com>
Date: Wed, 17 May 2023 19:44:44 +0800
Subject: [PATCH] Add falling block tick mode feature


diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index 18eaccb39a4c81338a8cbebe3de03934913ac2a4..b3f55159287b96ffc402815a1e99999fbc3b5bc4 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -47,6 +47,7 @@ import net.minecraft.world.level.material.Fluids;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import net.windmilltown.wtserver.WindmillTownConfig;
 import org.slf4j.Logger;
 
 // CraftBukkit start;
@@ -97,7 +98,7 @@ public class FallingBlockEntity extends Entity {
         FallingBlockEntity entityfallingblock = new FallingBlockEntity(world, (double) blockposition.getX() + 0.5D, (double) blockposition.getY(), (double) blockposition.getZ() + 0.5D, iblockdata.hasProperty(BlockStateProperties.WATERLOGGED) ? (BlockState) iblockdata.setValue(BlockStateProperties.WATERLOGGED, false) : iblockdata);
         if (!CraftEventFactory.callEntityChangeBlockEvent(entityfallingblock, blockposition, iblockdata.getFluidState().createLegacyBlock())) return entityfallingblock; // CraftBukkit
 
-        world.setBlock(blockposition, iblockdata.getFluidState().createLegacyBlock(), 3);
+        if(!WindmillTownConfig.getConfig().useOldVersionFallingTick.value()) world.setBlock(blockposition, iblockdata.getFluidState().createLegacyBlock(), 3); // WTServer - falling tick mode
         world.addFreshEntity(entityfallingblock, spawnReason); // CraftBukkit
         return entityfallingblock;
     }
@@ -141,7 +142,18 @@ public class FallingBlockEntity extends Entity {
             this.discard();
         } else {
             Block block = this.blockState.getBlock();
-
+            // WindmillTown start
+            // We remove the block when ticking entities if old version falling tick enabled
+            if(WindmillTownConfig.getConfig().useOldVersionFallingTick.value() && this.time == 0) {
+                BlockPos blockposition = this.blockPosition();
+                if (this.level().getBlockState(blockposition).is(block) && !CraftEventFactory.callEntityChangeBlockEvent(this, blockposition, blockState.getFluidState().createLegacyBlock())) {
+                    this.level().removeBlock(blockposition, false);
+                } else if (!this.level().isClientSide) {
+                    this.discard();
+                    return;
+                }
+            }
+            // WindmillTown end
             ++this.time;
             if (!this.isNoGravity()) {
                 this.setDeltaMovement(this.getDeltaMovement().add(0.0D, -0.04D, 0.0D));
diff --git a/src/main/java/net/windmilltown/wtserver/WindmillTown.java b/src/main/java/net/windmilltown/wtserver/WindmillTown.java
index 585427f1146fb33a6c3280615398316042855d22..c8fc1e87101baa8386ec7fe4e44f38b7127da7ee 100644
--- a/src/main/java/net/windmilltown/wtserver/WindmillTown.java
+++ b/src/main/java/net/windmilltown/wtserver/WindmillTown.java
@@ -11,4 +11,15 @@ public class WindmillTown implements WindmillTownAPI {
     public WindmillTown() {
         instance = this;
     }
+
+    @Override
+    public void setOldVersionFallingTick(boolean useOld) {
+        WindmillTownConfig.getConfig().useOldVersionFallingTick.set(useOld);
+        if(WindmillTownConfig.getConfig().fallingTickModeAutoSave.value()) WindmillTownConfig.getConfig().save();
+    }
+
+    @Override
+    public boolean getOldVersionFallingTick() {
+        return WindmillTownConfig.getConfig().useOldVersionFallingTick.value();
+    }
 }
diff --git a/src/main/java/net/windmilltown/wtserver/WindmillTownConfig.java b/src/main/java/net/windmilltown/wtserver/WindmillTownConfig.java
index 78f48e163e97cc49718ff2824d8ee115c840d56e..1aa17f0e6c98d2928ab8dac362309cc036cb0d88 100644
--- a/src/main/java/net/windmilltown/wtserver/WindmillTownConfig.java
+++ b/src/main/java/net/windmilltown/wtserver/WindmillTownConfig.java
@@ -10,6 +10,9 @@ import java.lang.reflect.Field;
 
 public class WindmillTownConfig extends YamlConfiguration {
 
+    final public ConfigKey<Boolean> useOldVersionFallingTick = new ConfigKey<>("game-behaviour.use-old-falling-tick", false);
+    final public ConfigKey<Boolean> fallingTickModeAutoSave = new ConfigKey<>("game-behaviour.falling-tick-auto-save", false);
+
     private static WindmillTownConfig config;
 
     /**
